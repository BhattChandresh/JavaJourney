/**
 * Given a string queryIP, return "IPv4" if IP is a valid IPv4 address, "IPv6" if IP is a valid IPv6 address or "Neither" if IP is not a correct IP of any type.
 * A valid IPv4 address is an IP in the form "x1.x2.x3.x4" where 0 <= xi <= 255 and xi cannot contain leading zeros. For example, "192.168.1.1" and "192.168.1.0" are valid IPv4 addresses while "192.168.01.1", "192.168.1.00", and "192.168@1.1" are invalid IPv4 addresses.
 * A valid IPv6 address is an IP in the form "x1:x2:x3:x4:x5:x6:x7:x8" where:

 * 1 <= xi.length <= 4
 * xi is a hexadecimal string which may contain digits, lowercase English letter ('a' to 'f') and upper-case English letters ('A' to 'F').
 * Leading zeros are allowed in xi.
 * For example, "2001:0db8:85a3:0000:0000:8a2e:0370:7334" and "2001:db8:85a3:0:0:8A2E:0370:7334" are valid IPv6 addresses, while "2001:0db8:85a3::8A2E:037j:7334" and "02001:0db8:85a3:0000:0000:8a2e:0370:7334" are invalid IPv6 addresses.

 * Example 1:
 * Input: queryIP = "172.16.254.1"
 * Output: "IPv4"
 * Explanation: This is a valid IPv4 address, return "IPv4".
 * Example 2:
 * Input: queryIP = "2001:0db8:85a3:0:0:8A2E:0370:7334"
 * Output: "IPv6"
 * Explanation: This is a valid IPv6 address, return "IPv6".
 * Example 3:
 * Input: queryIP = "256.256.256.256"
 * Output: "Neither"
 * Explanation: This is neither a IPv4 address nor a IPv6 address.
 * Constraints:
 *
 * queryIP consists only of English letters, digits and the characters '.' and ':'.
 */


package main.java.com.practice.java.string;

public class ValidateIpAddress {

    private static final String NEITHER = "Neither";
    private static final String IPV4 = "IPv4";
    private static final String IPV6 = "IPv6";

    public static void main(String[] args) {
        //String input =  "172.16.254.1";
        //String input = "192.168.01.1";
        //String input = "192.168.1.00";
        //String input = "192.168@1.1";
        //String input = "256.256.256.256";
        //String input = "172.28..15";
        //String input = "192.168.10.25.";
        //String input = "1e1.4.5.6";

        //String input = "2001:0db8:85a3:0:0:8A2E:0370:7334";
        //String input = "2001:0dz8:85a3:0:0:8A2E:0370:7334";
        //String input = "2001:db8:85a3:0:0:8A2E:0370:7334";
        //String input = "2001:0db8:85a3::8A2E:037j:7334";
        //String input = "02001:0db8:85a3:0000:0000:8a2e:0370:7334";
        //String input = "2001:0db8:85a3:0:0:8A2E:0370:7334:";
        //String input = "20EE:FGb8:85a3:0:0:8A2E:0370:7334";

        //String input = "";

        //String input = "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111.1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111.1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111.1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111";

        String input = "192.0.0.1";

        ValidateIpAddress ipAddress = new ValidateIpAddress();
        String result = ipAddress.validIPAddress(input);
        System.out.println("Result is : " + result);
    }

    public String validIPAddress(String queryIP) {

        int countDot = 0;
        int countColon = 0;

        if (queryIP.length() == 0) {
            return NEITHER;
        }

        for(int k=0; k < queryIP.length(); k++) {
            Character c = queryIP.charAt(k);
            if (!Character.isDigit(c) && !Character.isLetter(c) && !c.equals('.') && !c.equals(':')) {
                return NEITHER;
            }

            if (c.equals('.')) {
                countDot++;
            }

            if (c.equals(':')) {
                countColon++;
            }
        }

        if(queryIP.contains(".")) {

            if (queryIP.length() > 15) {
                return NEITHER;
            }

            if (countDot != 3) {
                return NEITHER;
            }

            for(int k=0; k < queryIP.length(); k++) {
                if(Character.isLetter(queryIP.charAt(k))) {
                    return NEITHER;
                }
            }

            String result = checkForIpV4(queryIP);
            return  result;
        }

        if(queryIP.contains(":")) {

            if(queryIP.length() > 40) {
                return NEITHER;
            }

            if (countColon != 7) {
                return NEITHER;
            }

            queryIP = queryIP.toLowerCase();

            for(int k=0 ; k < queryIP.length(); k++) {
                if(queryIP.charAt(k) > 'f') {
                    return NEITHER;
                }
            }

            String result = checkForIpV6(queryIP);
            return result;
        }
        return null;
    }

    private String checkForIpV4(String queryIP) {
        int validNumber = 0;
        String[] arr = queryIP.split("\\.");

        for(int k=0 ; k < arr.length;k++) {
            if(!arr[k].isEmpty()) {

                if(arr[k].charAt(0) == '0' && arr[k]. length() > 1) {
                    return NEITHER;
                }

                int number = Integer.parseInt(arr[k]);


                if (number >= 0 && number <= 255) {
                    validNumber++;
                }
            }
        }

        if(validNumber == 4) {
            return IPV4;
        }
        return NEITHER;
    }

    private String checkForIpV6(String queryIP) {
        int validNumber = 0;


        String[] arr = queryIP.split("\\:");

        for(int k=0; k < arr.length; k++) {
            if(!arr[k].isEmpty()) {
                if(arr[k].length() >= 1 && arr[k].length() <=4) {
                    validNumber++;
                }
            }
        }
        if(validNumber == 8) {
            return IPV6;
        }
        return NEITHER;
    }
}
