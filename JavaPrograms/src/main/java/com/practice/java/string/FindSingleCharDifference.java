/*
You are given two strings s and t.
String t is generated by random shuffling string s and then add one more letter at a random position.
Return the letter that was added to t.

Example 1:
Input: s = "abcd", t = "abcde"
Output: "e"
Explanation: 'e' is the letter that was added.
 */
package com.practice.java.string;

import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

public class FindSingleCharDifference {
    public static void main(String[] args) {
        FindSingleCharDifference singleCharDifference = new FindSingleCharDifference();
        Scanner sc = new Scanner(System.in);
        String original = sc.nextLine();
        String strWithAdditionalChar = sc.nextLine();
        sc.close();
        String addedChar = singleCharDifference.getTheAdditionalCharacter(original, strWithAdditionalChar);
        System.out.println("Added Character = " + addedChar);
    }

    protected String getTheAdditionalCharacter(String original, String strWithAdditionalChar) {
        Map<String, Integer> wordCount = new HashMap<>();
        final String[] additionalChar = {""};
        wordFrequencyInOriginalString(wordCount, original);
        computeWordsFrequency(wordCount, strWithAdditionalChar);
        wordCount.forEach((word, count) -> additionalChar[0] = word);
        return additionalChar[0];
    }

    private void computeWordsFrequency(Map<String, Integer> wordCount, String strWithAdditionalChar) {
        for (int index = 0; index < strWithAdditionalChar.length(); index++) {
            String strChar = String.valueOf(strWithAdditionalChar.charAt(index));
            if (wordCount.containsKey(strChar)) {
                int value = wordCount.get(strChar);
                if (value == 1) {
                    wordCount.remove(strChar);
                    continue;
                }
                wordCount.put(strChar, value - 1);
            } else {
                wordCount.put(strChar, 1);
            }
        }
    }

    private void wordFrequencyInOriginalString(Map<String, Integer> wordCount, String original) {
        for (int index = 0; index < original.length(); index++) {
            String strChar = String.valueOf(original.charAt(index));
            if (!(wordCount.containsKey(strChar))) {
                wordCount.put(strChar, 1);
                continue;
            }
            int value = wordCount.get(strChar);
            wordCount.put(strChar, value + 1);
        }
    }
}





